class ModalDialog extends HTMLElement{#e;constructor(){super(),this.hasAttribute("open")||(this.ariaHidden="true");const e=this.attachShadow({mode:"closed"});e.innerHTML="<style>:host{position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999}:host(:not([open])){display:none}.backdrop{box-sizing:border-box;width:100%;height:100%;background-color:rgba(0,0,0,.5);display:grid;place-items:center;padding:1rem}.content{position:relative;background-color:#fff;border-radius:5px;padding:1rem;box-sizing:border-box;max-width:768px;max-height:100%;overflow-y:auto;box-shadow:0 0 10px rgba(0,0,0,.5)}button.close{position:absolute;top:0;right:0;font-size:2.5em;border:none;background:0 0;cursor:pointer;color:grey}button.close:hover{color:#000}</style><div class=backdrop><div class=content aria-modal=true role=dialog><slot></slot><button aria-label=Close class=close type=button>\xD7</button></div></div>",this.#e=e.querySelector(".backdrop"),this.#e.addEventListener("click",this.#n.bind(this)),e.querySelector("button.close").addEventListener("click",this.close.bind(this))}open(){this.toggleAttribute("open",!0)}close(){this.removeAttribute("open")}attributeChangedCallback(e,o,t){switch(e){case"open":t!==null?this.#t():this.#i()}}static get observedAttributes(){return["open"]}#t(){this.#s(),this.ariaHidden="false",document.body.style.overflow="hidden",document.addEventListener("keydown",this.#o)}#i(){this.ariaHidden="true",document.body.style.removeProperty("overflow"),document.removeEventListener("keydown",this.#o)}#s(){Array.from(document.querySelectorAll("modal-dialog[open]")).filter(o=>o!==this).forEach(o=>o.close())}#n(e){e.target===this.#e&&this.close()}#o=(e=>{e.key==="Escape"&&this.close()}).bind(this)}customElements.define("modal-dialog",ModalDialog);
